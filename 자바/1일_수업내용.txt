(1) 크롬 브라우저 설치: https://www.google.com/chrome
(2) Java SE(JDK) 설치: http://java.sun.com/ -> https://www.oracle.com/technetwork/java/index.htm
    설치후 환경변수 설정: JAVA_HOME, PATH
		       JAVA_HOME: C:\Program Files\Java\jdk1.8.0_231
		       PATH: C:\Program Files\Java\jdk1.8.0_231\bin = %JAVA_HOME%\bin
(3) Eclipse 설치: https://www.eclipse.org/
	        C:\younggi\eclipse-workspace
	        프로젝트라는 폴더를 생성해야 한다.
	        - Java Project (★지금은 요거) - javaexam 
	        - Dynamic Web Project
	        - Spring MVC Project
		:

맛보기용 자바 프로그램: FirstApp

cmd: 명령프로그램

[ 자바 구문 ]

1. 데이터 타입: 2장
2. 변수활용: 2장
3. 연산자: 3장
4. 제어문: 4장
5. 배열: 5장
---------------- 자바의 기본 구문
6. 클래스 정의와 객체 생성
7. 상속, 다형성, 인터페이스, 추상클래스, 인터페이스
8. 예외처리
---------------- OOP 구문(객체지향 구문)

API - Appliaction Programming Interface
       자주 필요로하는 기능을 미리 만들어 놓은 프로그램
       클래스(Math, Date, Calendar, ...) - 패키지(java.io, java.net, java.sql, java.lang..)
// 패키지 이름은 다 소문자로 쓰는 것이 관례이다.

학습 소스들을 패키지화: day1, day2, .....

LiteralTest

1. 데이터 타입
   숫자데이터-정수(byte(1바이트), short(2), int(4), long(8)),실수(float(4), double(8))
   논리데이터-true, false
   문자데이터-문자의 코드값 처리할 수 있는 타입, 2바이트, '1' - 0031(16), 'a' - 0061(16), '가'-AC00(16)
   문자열데이터-객체로 취급, "ABC", "가나다", "123", 

리터럴(literal) : 프로그램 소스 코드에서 사용되는 데이터 값
	       1, 1,0, '1', "1", "가", '가', "가나다", "java"
변수: 데이터 값을 저장하는 메모리의 방
       데이터 값을 저장하기 위해 메모리의 일정 공간에 붙여진 이름
       저장된 데이터 값을 계속해서 변경 가능
       필요시 생성해서 사용한다.

       변수의 생성 -> 변수 선언이라 한다.
    
       타입 변수명:
       타입 변수명 = 초기값; // 초기값: 최초로 넣어지는 값
    
      정수 -> byte, short, int, long
      실수 -> float, double
      문자 -> char
      논리 -> boolean
      문자열 -> String
    
      변수명: 소문자로 시작, 명사, 길이제한은 거의없다(65535자)
      숫자로 시작 불가,특수문자 중에는 _와 $기호만 가능 / sum, avg, name, address, phoneNumber

//자바는 논리형: 1,0 없다.  true, false만 있다 
//덧셈 연산자는 타입을 일치시켜서 더한다. 실수가 더 범위가 크기 때문에 정수보다는 실수에 맞춘다.

ASCII Code

[ 대입 연산자 ]
 변수 = 식;
          변수, 리터럴, 연산식, 리턴값이 있는 메서드의 호출식

 방       값        
 l-value  r-value  // data1 = data2 -> date1 방에 data2의 값을 넣어라

data1 = 100+200;
data1 = Math.random(); 0.0 <= 난수 < 1.0

[ 연산자 ]
- 기능
  산술연산자, 비교연산자, 논리연산자, 조건연산자, 대입연산자

- 사용되는 항(피연산자, 연산에 사용되는 데이터)의 갯수
  단항 연산자 : ++num(num = num+1) 
  이항 연산자 : 항1 연산자 항2
  삼항 연산자 : 항1?항2:항3
	       int bigNumber = num1 > num2 ? num1 : num2;
		
		-> if문으로 변경
	
		   int bigNumber;
		   if(num1 > num2)
		bigNumber = num1;
		   else
		bignumber = num2;

. 멤버 연산자
++, --, +(부호), -(부호), !, ~, (타입명)
*, ?, %
+, -
==(등가 연산자), !=, >, <, >=, <=, instanceof(7장 예정)
>>, >>>, << // 보안에서 많이 쓰임
&, |, ^ (비트 연산)
&&(논리 And)
||(논리 Or)
항1?항2:항3 // 항1 연산결과가 참이면 항2를 사용 아니면 항3을 사용해라(조건 연산자)
=, +=, -=, *=, /= 


  int su = 10; // su 변수의 값을 1증가
  su = su + 1; 
  ++su; -> 이게 가장 빠르다  / 여기서는 가장 추천
  su += 1; // 3개다 같은 말 

 int su = 10; // su 변수의 값을 3증가
 su = su + 3;
 ++su; ++su; ++su;
 su += 3; 여기서는 가장 추천

 





---------------------------------
시험 예상 문제
: public static void main(String[] args){} -> ★
 JVM(Java Virtual Machine) -> ★
자바 실행 확장자 - .class
자바 코드 - .java
자바는 대소문자 구분을 한다.


